{"ast":null,"code":"var _jsxFileName = \"C:\\\\ladarken\\\\web\\\\sushiswap-frontend\\\\src\\\\components\\\\Button\\\\Button.tsx\";\nimport React, { useContext, useMemo } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Button = ({\n  children,\n  disabled,\n  href,\n  onClick,\n  size,\n  text,\n  to,\n  variant,\n  bgcolor\n}) => {\n  const {\n    color,\n    spacing\n  } = useContext(ThemeContext);\n  let buttonColor;\n\n  switch (variant) {\n    case 'secondary':\n      buttonColor = color.grey[500];\n      break;\n\n    case 'default':\n    default:\n      buttonColor = color.primary.main;\n  }\n\n  let backgroundColor;\n\n  if (bgcolor) {\n    backgroundColor = bgcolor;\n  } else {\n    backgroundColor = `${color.grey[260]};`;\n  }\n\n  let boxShadow;\n  let buttonSize;\n  let buttonPadding;\n  let fontSize;\n\n  switch (size) {\n    case 'sm':\n      boxShadow = `6px 6px 12px ${color.grey[300]},\n        -12px -12px 24px ${color.grey[100]}ff;`;\n      buttonPadding = spacing[3];\n      buttonSize = 36;\n      fontSize = 14;\n      break;\n\n    case 'lg':\n      boxShadow = `6px 6px 12px ${color.grey[300]},\n        -12px -12px 24px ${color.grey[100]}ff;`;\n      buttonPadding = spacing[4];\n      buttonSize = 72;\n      fontSize = 16;\n      break;\n\n    case 'md':\n    default:\n      boxShadow = `6px 6px 12px ${color.grey[300]},\n        -12px -12px 24px -2px ${color.grey[100]}ff;`;\n      buttonPadding = spacing[4];\n      buttonSize = 56;\n      fontSize = 16;\n  }\n\n  b;\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return /*#__PURE__*/React.createElement(StyledLink, {\n        to: to,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }\n      }, text);\n    } else if (href) {\n      return /*#__PURE__*/React.createElement(StyledExternalLink, {\n        href: href,\n        target: \"__blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 14\n        }\n      }, text);\n    } else {\n      return text;\n    }\n  }, [href, text, to]);\n  return /*#__PURE__*/React.createElement(StyledButton, {\n    boxShadow: boxShadow,\n    color: buttonColor,\n    disabled: disabled,\n    fontSize: fontSize,\n    onClick: onClick,\n    padding: buttonPadding,\n    size: buttonSize,\n    bgcolor: backgroundColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, children, ButtonChild);\n};\n\nconst StyledButton = styled.button`\n  align-items: center;\n  // background-color: ${props => props.theme.color.grey[260]};\n  border: 0;\n  border-radius: 12px;\n  box-shadow: ${props => props.boxShadow};\n  color: ${props => !props.disabled ? props.color : `${props.color}55`};\n  cursor: pointer;\n  display: flex;\n  font-size: ${props => props.fontSize}px;\n  font-weight: 700;\n  height: ${props => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${props => props.padding}px;\n  padding-right: ${props => props.padding}px;\n  pointer-events: ${props => !props.disabled ? undefined : 'none'};\n  width: 100%;\n  &:hover {\n    background-color: ${props => props.theme.color.grey[200]};\n    color:#111;\n    \n  }\n`;\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${props => -props.theme.spacing[4]}px;\n  padding: 0 ${props => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${props => -props.theme.spacing[4]}px;\n  padding: 0 ${props => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\nexport default Button;","map":{"version":3,"sources":["C:/ladarken/web/sushiswap-frontend/src/components/Button/Button.tsx"],"names":["React","useContext","useMemo","styled","ThemeContext","Link","Button","children","disabled","href","onClick","size","text","to","variant","bgcolor","color","spacing","buttonColor","grey","primary","main","backgroundColor","boxShadow","buttonSize","buttonPadding","fontSize","b","ButtonChild","StyledButton","button","props","theme","padding","undefined","StyledLink","StyledExternalLink","a"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode,\r\n  disabled?: boolean,\r\n  href?: string,\r\n  onClick?: () => void,\r\n  size?: 'sm' | 'md' | 'lg',\r\n  text?: string,\r\n  to?: string,\r\n  variant?: 'default' | 'secondary' | 'tertiary'\r\n  bgcolor?: string,\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  children,\r\n  disabled,\r\n  href,\r\n  onClick,\r\n  size,\r\n  text,\r\n  to,\r\n  variant,\r\n  bgcolor,\r\n}) => {\r\n  const { color, spacing } = useContext(ThemeContext)\r\n  \r\n  let buttonColor: string\r\n  switch (variant) {\r\n    case 'secondary':\r\n      buttonColor = color.grey[500]\r\n      break\r\n    case 'default':\r\n    default:\r\n      buttonColor = color.primary.main\r\n  }\r\n  let backgroundColor: string\r\n  if(bgcolor){\r\n    backgroundColor = bgcolor\r\n  }else{\r\n    backgroundColor = `${color.grey[260]};`\r\n  }\r\n  let boxShadow: string\r\n  let buttonSize: number\r\n  let buttonPadding: number\r\n  let fontSize: number\r\n\r\n  switch (size) {\r\n    case 'sm':\r\n      boxShadow = `6px 6px 12px ${color.grey[300]},\r\n        -12px -12px 24px ${color.grey[100]}ff;`\r\n      buttonPadding = spacing[3]\r\n      buttonSize = 36\r\n      fontSize = 14\r\n      break\r\n    case 'lg':\r\n      boxShadow = `6px 6px 12px ${color.grey[300]},\r\n        -12px -12px 24px ${color.grey[100]}ff;`\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 72\r\n      fontSize = 16\r\n      break\r\n    case 'md':\r\n    default:\r\n      boxShadow = `6px 6px 12px ${color.grey[300]},\r\n        -12px -12px 24px -2px ${color.grey[100]}ff;`\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 56\r\n      fontSize = 16\r\n      \r\n  }\r\nb\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>\r\n    } else if (href) {\r\n      return <StyledExternalLink href={href} target=\"__blank\">{text}</StyledExternalLink>\r\n    } else {\r\n      return text\r\n    }\r\n  }, [href, text, to])\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n      bgcolor={backgroundColor}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string,\r\n  color: string,\r\n  disabled?: boolean,\r\n  fontSize: number,\r\n  padding: number,\r\n  size: number,\r\n  bgcolor: string,\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  // background-color: ${props => props.theme.color.grey[260]};\r\n  border: 0;\r\n  border-radius: 12px;\r\n  box-shadow: ${props => props.boxShadow};\r\n  color: ${props => !props.disabled ? props.color : `${props.color}55`};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${props => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${props => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${props => props.padding}px;\r\n  padding-right: ${props => props.padding}px;\r\n  pointer-events: ${props => !props.disabled ? undefined : 'none'};\r\n  width: 100%;\r\n  &:hover {\r\n    background-color: ${props => props.theme.color.grey[200]};\r\n    color:#111;\r\n    \r\n  }\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${props => -props.theme.spacing[4]}px;\r\n  padding: 0 ${props => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${props => -props.theme.spacing[4]}px;\r\n  padding: 0 ${props => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nexport default Button"]},"metadata":{},"sourceType":"module"}